/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import login.PersonHistory;
import login.PersonHistoryService;
import login.PersonHistoryServiceImpl;
import login.PersonLogin;

/**
 *
 * @author visma
 */
public class ProfMangScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfMangScheduleJPanel
     */
    
    PersonHistoryService history;
    
    public ProfMangScheduleJPanel() {
        initComponents();
        
        //history = PersonHistoryServiceImpl.getInstance();         
        populateTable();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageUser = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        btnProfViewCr = new javax.swing.JButton();
        btnProfDeleteCr = new javax.swing.JButton();
        btnProfUpdateCr = new javax.swing.JButton();
        lblCourseName = new javax.swing.JLabel();
        txtAddCourseName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CBmonday = new javax.swing.JCheckBox();
        CBthursday = new javax.swing.JCheckBox();
        CBtuesday = new javax.swing.JCheckBox();
        CBwednesday = new javax.swing.JCheckBox();
        lblCourseSchedule = new javax.swing.JLabel();
        CBfriday = new javax.swing.JCheckBox();
        CBPrerequisites = new javax.swing.JComboBox<>();
        lblPrerequisites = new javax.swing.JLabel();
        lblMaxEnrollments = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 51, 51));

        lblManageUser.setBackground(new java.awt.Color(204, 204, 204));
        lblManageUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblManageUser.setForeground(new java.awt.Color(255, 255, 255));
        lblManageUser.setText("Manage Schedule");

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "NUID", "UserID", "Password"
            }
        ));
        jScrollPane1.setViewportView(UserTable);

        btnProfViewCr.setText("View Course");
        btnProfViewCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfViewCrActionPerformed(evt);
            }
        });

        btnProfDeleteCr.setText("Delete");
        btnProfDeleteCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfDeleteCrActionPerformed(evt);
            }
        });

        btnProfUpdateCr.setText("Update");
        btnProfUpdateCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfUpdateCrActionPerformed(evt);
            }
        });

        lblCourseName.setBackground(new java.awt.Color(204, 204, 204));
        lblCourseName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCourseName.setForeground(new java.awt.Color(255, 255, 255));
        lblCourseName.setText("Course Name:");

        txtAddCourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddCourseNameActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Days");

        CBmonday.setForeground(new java.awt.Color(255, 255, 255));
        CBmonday.setText("Monday");

        CBthursday.setForeground(new java.awt.Color(255, 255, 255));
        CBthursday.setText("Thursday");

        CBtuesday.setForeground(new java.awt.Color(255, 255, 255));
        CBtuesday.setText("Tuesday");

        CBwednesday.setForeground(new java.awt.Color(255, 255, 255));
        CBwednesday.setText("Wednesday");
        CBwednesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBwednesdayActionPerformed(evt);
            }
        });

        lblCourseSchedule.setBackground(new java.awt.Color(204, 204, 204));
        lblCourseSchedule.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCourseSchedule.setForeground(new java.awt.Color(255, 255, 255));
        lblCourseSchedule.setText("Course Schedule:");

        CBfriday.setForeground(new java.awt.Color(255, 255, 255));
        CBfriday.setText("Friday");

        CBPrerequisites.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPrerequisites.setBackground(new java.awt.Color(204, 204, 204));
        lblPrerequisites.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPrerequisites.setForeground(new java.awt.Color(255, 255, 255));
        lblPrerequisites.setText("Prerequisites:");

        lblMaxEnrollments.setBackground(new java.awt.Color(204, 204, 204));
        lblMaxEnrollments.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMaxEnrollments.setForeground(new java.awt.Color(255, 255, 255));
        lblMaxEnrollments.setText("Maximum Enrollments:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrerequisites)
                            .addComponent(lblMaxEnrollments))
                        .addGap(89, 89, 89)
                        .addComponent(CBPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblManageUser)
                            .addGap(301, 301, 301))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblCourseSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(CBmonday, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtAddCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(112, 112, 112)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnProfViewCr)
                                        .addComponent(btnProfDeleteCr)
                                        .addComponent(btnProfUpdateCr, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(CBtuesday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(CBthursday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBfriday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(CBwednesday, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(441, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnProfDeleteCr, btnProfUpdateCr, btnProfViewCr});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblManageUser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnProfViewCr)
                            .addComponent(txtAddCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProfDeleteCr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProfUpdateCr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCourseSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(21, 21, 21)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBfriday)
                    .addComponent(CBwednesday)
                    .addComponent(CBmonday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBtuesday)
                    .addComponent(CBthursday))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(lblMaxEnrollments, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProfUpdateCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfUpdateCrActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = UserTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) UserTable.getModel();
        PersonLogin person = history.getPerson().get(selectedRowIndex);

        // Retrieve updated values from text fields
//        String updatedUserName = txtUserName.getText();
//        String updatedNUID = txtNUID.getText();
//        String updatedUserID = txtUserID.getText();
//        String updatedPassword = txtUserPassword.getText(); // You might want to encrypt it here if needed

        // Update the PersonLogin object
//        person.setUserName(updatedUserName);
//        person.setNuID(updatedNUID);
//        person.setUserID(updatedUserID);
//        person.setPassword(updatedPassword);

        // Update the table model to reflect the changes
//        model.setValueAt(updatedUserName, selectedRowIndex, 0);
//        model.setValueAt(updatedNUID, selectedRowIndex, 1);
//        model.setValueAt(updatedUserID, selectedRowIndex, 2);
//        model.setValueAt(updatedPassword, selectedRowIndex, 3);

        // No need for history.updateUser() here

        JOptionPane.showMessageDialog(this, "User account updated.");

    }//GEN-LAST:event_btnProfUpdateCrActionPerformed

    private void btnProfDeleteCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfDeleteCrActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = UserTable.getSelectedRow();

        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to View.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) UserTable.getModel();
        PersonLogin person = history.getPerson().get(selectedRowIndex);

        history.deletePerson(person);

        JOptionPane.showMessageDialog(this, "User account deleted.");

        populateTable();
    }//GEN-LAST:event_btnProfDeleteCrActionPerformed

    private void btnProfViewCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfViewCrActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = UserTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to View.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) UserTable.getModel();
        PersonLogin person = history.getPerson().get(selectedRowIndex);
        txtUserName.setText(String.valueOf(person.getUserName()));
        txtUserPassword.setText(decryptPassword(person.getPassword()));
        txtUserID.setText(String.valueOf(person.getUserID()));
        txtNUID.setText(String.valueOf(person.getNuID() == null ? "" : person.getNuID()));

    }//GEN-LAST:event_btnProfViewCrActionPerformed

    private void txtAddCourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddCourseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddCourseNameActionPerformed

    private void CBwednesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBwednesdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBwednesdayActionPerformed

    private String decryptPassword(String encryptedPassword) {
        try {
           
            return encryptedPassword;
        } catch (Exception e) {
            e.printStackTrace();
            return null; // Handle the error appropriately in your application
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBPrerequisites;
    private javax.swing.JCheckBox CBfriday;
    private javax.swing.JCheckBox CBmonday;
    private javax.swing.JCheckBox CBthursday;
    private javax.swing.JCheckBox CBtuesday;
    private javax.swing.JCheckBox CBwednesday;
    private javax.swing.JTable UserTable;
    private javax.swing.JButton btnProfDeleteCr;
    private javax.swing.JButton btnProfUpdateCr;
    private javax.swing.JButton btnProfViewCr;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCourseName;
    private javax.swing.JLabel lblCourseSchedule;
    private javax.swing.JLabel lblManageUser;
    private javax.swing.JLabel lblMaxEnrollments;
    private javax.swing.JLabel lblPrerequisites;
    private javax.swing.JTextField txtAddCourseName;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
//        DefaultTableModel model = (DefaultTableModel) UserTable.getModel();
//        model.setRowCount(0);
//        
//        for(PersonLogin vs : history.getPerson()){
//            
//            Object[] row = new Object[4];
//            row[0] = vs.getUserName();
//            row[1] = vs.getNuID();
//            row[2] = vs.getUserID();
//            row[3] = vs.getPassword();
//            
//            model.addRow(row);
            
        }
        
    }
}
